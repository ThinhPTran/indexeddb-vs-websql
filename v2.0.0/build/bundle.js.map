{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","app/js/app.js","app/js/Benchmark.js","app/js/Generator.js","app/js/IDB.js","app/js/LS.js","app/js/Log.js","app/js/State.js","app/js/TestRunner.js","app/js/Testable.js","app/js/ViewModel.js","app/js/WebSql.js"],"names":[],"mappings":"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","file":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import TestRunner from './TestRunner';\nimport ViewModel from './ViewModel';\nimport Log from './Log';\nimport IDB from './IDB';\nimport WebSql from './WebSql';\nimport LS from './LS';\n\nlet vm = ViewModel.instance;\n\nclass View {\n    constructor() {\n        \"use strict\";\n        let refs = {\n                ls: LS,\n                indexeddb: IDB,\n                websql: WebSql\n            },\n            log = new Log({removable: false});\n\n        for (let i = vm.engines().length - 1; i >= 0; i--) {\n            if (!refs[vm.engines()[i].id].isAvailable()) {\n                log.info(`${vm.engines()[i].name} is not available in your browser`);\n            } else {\n                vm.engines()[i].disabled(false);\n            }\n        }\n        log.info('Ready to go');\n    }\n\n    setup() {\n        $('[run-tests]').click((event) => {\n            event.preventDefault();\n\n            if (!this.busy) {\n                this.busy = true;\n\n                Log.clear();\n                vm.clearTestData();\n\n                TestRunner.instance.run(() => {\n                    \"use strict\";\n                    this.busy = false;\n                });\n            }\n            else {\n                new Log().warn('In progress already! Please wait (or reload this page)!!');\n            }\n        });\n\n        $('[download-data]').click((event) => {\n            event.preventDefault();\n            //var dialog = document.querySelector('dialog.dialog-sql');\n            //dialogPolyfill.registerDialog(dialog);\n            // Now dialog acts like a native <dialog>.\n            $('dialog.dialog-sql').get(0).showModal();\n            /*TestRunner.instance.getData((data) => {\n                let output = WebSql.getCreateTableSql();\n\n                data.records.forEach((r) => {\n                    \"use strict\";\n\n                    output.push(`INSERT INTO customers (ssn, email, name, age) VALUES(\"${r.ssn}\", \"${r.email}\", \"${r.name}\", ${r.age});`);\n                });\n                var pom = document.createElement('a');\n                pom.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(output.join('')));\n                pom.setAttribute('download', 'dump.sql');\n\n                pom.style.display = 'none';\n                document.body.appendChild(pom);\n\n                pom.click();\n\n                document.body.removeChild(pom);\n            }); */\n        });\n    }\n}\n\nfunction download(event) {\n    \"use strict\";\n    event.preventDefault();\n\n    if (event.target.textContent === 'MySQL') {\n       uploadSQL('mysql-dump.sql', WebSql.getCreateTableSql('mysql'));\n\n    } else if (event.target.textContent === 'SQLite') {\n        uploadSQL('sqlite-dump.sql', WebSql.getCreateTableSql('sqlite'));\n    }\n\n    this.closest('dialog').close();\n}\n\nfunction uploadSQL(filename, sql) {\n    \"use strict\";\n\n\n    TestRunner.instance.getData((data) => {\n        data.records.forEach((r) => {\n            \"use strict\";\n\n            sql.push(`INSERT INTO customers (ssn, email, name, age) VALUES(\"${r.ssn}\", \"${r.email}\", \"${r.name}\", ${r.age});`);\n        });\n\n        let pom = document.createElement('a');\n        pom.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(sql.join('')));\n        pom.setAttribute('download', filename);\n\n        pom.style.display = 'none';\n        document.body.appendChild(pom);\n\n        pom.click();\n\n        document.body.removeChild(pom);\n        new Log().info(`Uploading file '${filename}'`);\n    });\n}\n\n$(() => {\n    ko.applyBindings(ViewModel.instance);\n\n    new View().setup();\n\n    $('[supported-db-types]').click(download);\n});\n","\"use strict\";\n\nlet startDate;\n\nexport default class Benchmark {\n    constructor() {}\n\n    // If `callable` is defined, cb is not optional. Furthermore this.end is called too!\n    start(callable, cb) {\n        this.startDate = new Date();\n\n        if (callable) {\n            callable((output) => {\n                cb(this.end(), output);\n            });\n        }\n\n        return this;\n    }\n\n    end() {\n        if (!this.startDate) {\n            throw 'Benchmark `end` called without a `start` call!';\n        }\n\n        let amount = new Date() - this.startDate;\n        this.startDate = null;\n\n        return Math.round(amount/1) / 1000;\n    }\n}\n","let alphabet = 'abcdefghijklmnopqrstuvwxyz01234567890'.split('');\n\nfunction generateSSN(rand) {\n    \"use strict\";\n\n    return '' + rand.get(9, 0) + rand.get(9, 0) + rand.get(9, 0) + rand.get(9, 0) +\n        '-' + rand.get(9, 0) + rand.get(9, 0) + rand.get(9, 0) + rand.get(9, 0) +\n        '-' + rand.get(9, 0) + rand.get(9, 0) + rand.get(9, 0) + rand.get(9, 0);\n}\n\nfunction generateString(max, min, rand) {\n    \"use strict\";\n    let str = '', length = max;\n\n    if (typeof min !== 'number') {\n        rand = min;\n    }\n    else {\n        length = rand.get(max, min);\n    }\n\n    for (var i = 0; i < length; i++) {\n        str += alphabet[rand.get(35, 0)];\n    }\n\n    return str;\n}\n\nfunction shuffleArray(data, rand) {\n    let newIndex;\n    for (let index = 0; index < data.length; index++) {\n        newIndex = rand.get(data.length - 1);\n        [data[index], data[newIndex]] = [data[newIndex], data[index]]; // swap items\n    }\n\n    return data;\n}\n\nfunction defineBoundsBy(data, key, numberOfMatches, rand) {\n    \"use strict\";\n\n    data.sort((a, b) => {\n        return a[key] > b[key] ? 1 : a[key] == b[key] ? 0 : -1;\n    });\n\n    let startIndex = rand.get(data.length - numberOfMatches - 1);\n\n    if (key !== 'ssn' && key !== 'email') {\n        for (let i = startIndex; i < startIndex + numberOfMatches; i++) {\n            data[i][key] = `${data[i][key]}`; // make unique\n        }\n    }\n\n    return [data[startIndex], data[startIndex + numberOfMatches - 1]];\n}\n\nclass NumberGenerator {\n    constructor(seed) {\n        this.A = 48271;\n        this.M = 2147483647;\n\n        this.Q = this.M / this.A;\n        this.R = this.M % this.A;\n        this.X = 1.0 / this.M;\n\n        this.seed = seed;\n    }\n\n    get(max = 1, min = 0) {\n        this.seed = this.A * (this.seed % this.Q) - this.R * (this.seed / this.Q);\n        if (this.seed <= 0) {\n            this.seed += this.M;\n        }\n\n        return Math.round((max - min) * this.seed * this.X + min);\n    }\n}\n\nclass Generator {\n\n    constructor() {\n        throw 'Static class!';\n    }\n\n    static create(records, seed, boundMatches) {\n        let output = {};\n        let data = [];\n        let rand = new NumberGenerator(seed);\n\n        generateString(8, rand);\n        let name;\n        // Create some fake records\n        while (records > data.length) {\n            data.push({\n                ssn:   generateSSN(rand), // PK\n                name:  `${generateString(8, 3, rand)} ${generateString(10, 5, rand)}`, // I\n                email: `${generateString(8, 3, rand)}@${generateString(8, rand)}.${generateString(3, rand)}`, // UI\n                age:   rand.get(1000000000) // No I\n            });\n        }\n\n        // Choose 4 different records\n        let indices = [];\n        for(let i = 0; i < 4; i++) {\n            let randVal, length = indices.length;\n            while (indices.length === length) {\n                randVal = rand.get(data.length-1);\n                if (indices.indexOf(randVal) === -1) {\n                    indices.push(randVal);\n                }\n            }\n        }\n\n        output.single = {\n            pk: data[indices[0]],\n            ui: data[indices[1]],\n            i: data[indices[2]],\n            noi: data[indices[3]]\n        };\n\n        output.multi = {\n            numberOfMatches: boundMatches,\n            pk: defineBoundsBy(data, 'ssn', boundMatches, rand),\n            ui: defineBoundsBy(data, 'email', boundMatches, rand),\n            i: defineBoundsBy(data, 'name', boundMatches, rand),\n            noi: defineBoundsBy(data, 'age', boundMatches, rand)\n        };\n        output.records = shuffleArray(data, rand);\n\n        return output;\n    }\n}\n\nexport default Generator\n","\"use strict\";\n\nimport Testable from './Testable';\n\nconst DBNAME = 'idb-test',\n    OBJECTSTORENAME = 'customers',\n    VERSION = 22;\n\nlet dbconn;\n\nexport default\nclass IDB extends Testable {\n    constructor(options = {\n        dbname: 'idb-test',\n        store: 'customers'\n    }) {\n        this.dbname = options.dbname;\n        this.store = options.store;\n        this.idb = getIndexedDBObject('indexedDB');\n    }\n\n    static isAvailable() {\n        return !!getIndexedDBObject('indexedDB');\n    }\n\n    static get instance() {\n        return new IDB();\n    }\n\n    connect(onsuccess, onerror, onupgradeneeded) {\n        dbconn = this.idb.open(DBNAME, VERSION);\n\n        dbconn.onsuccess = onsuccess;\n\n        if (onerror) {\n            dbconn.onerror = onerror;\n        }\n\n        if (onupgradeneeded) {\n            dbconn.onupgradeneeded = onupgradeneeded;\n        }\n    }\n\n    clear(cb) {\n        let transaction = getTransaction('readwrite', cb);\n\n        if (transaction) {\n            if (transaction.db.objectStoreNames.contains(OBJECTSTORENAME)) {\n                let objectStore = transaction.objectStore(OBJECTSTORENAME);\n                let objectStoreRequest = objectStore.clear();\n                //objectStoreRequest.onsuccess = () => { /* cb is called in transaction.oncomplete */ };\n\n                objectStoreRequest.onerror = (e) => {\n                    cb({status: 'fatal', msg: `Could not clear the object store (${e.message})`});\n                };\n            }\n\n            transaction.oncomplete = function (e) {\n                cb(); // continue!\n            };\n            transaction.onerror = function (e) {\n                cb({status: 'fatal', msg: `Could not access object store (${e.message})`});\n            };\n            transaction.onabort = function (e) {\n                cb({status: 'fatal', msg: `Transaction aborted (${e.message})`});\n            };\n\n        }\n    }\n\n\n    setup(data, cb) {\n        let status = [];\n\n        if (!dbconn) {\n            this.connect(\n                () => {          // onsuccess\n                    cb(status);\n                },\n                (event) => {    // onerror\n                    status.push({fatal: `Could not open the db: ${event.message}, ${dbconn.errorCode}`});\n                    cb(status);\n                }, (event) => { // onupgradeneeded\n                    // Update object stores and indices\n                    status.push({info: 'Upgrade needed (onupgradeneeded)'});\n\n                    let db = event.target.result;\n\n                    while (db.objectStoreNames.length) {\n                        db.deleteObjectStore(db.objectStoreNames[0]);\n                    }\n\n                    let objectStore = db.createObjectStore(OBJECTSTORENAME, {\n                        keyPath: \"ssn\"\n                    });\n                    objectStore.createIndex(\"name\", \"name\", {\n                        unique: false\n                    });\n                    objectStore.createIndex(\"email\", \"email\", {\n                        unique: true\n                    });\n                }\n            );\n        } else {\n           cb();\n        }\n    }\n\n    /* the last two parameters are ment for internal use only\n     clear: if true -> call clear first\n     failedMsg: hold a message if clearing failed\n     */\n    insert(data, cb, clear = true, failedMsg) {\n        if (failedMsg) {\n            cb(failedMsg);\n        }\n        else if (dbconn) {\n            if (!clear) {\n                let transaction = getTransaction('readwrite', cb);\n\n                if (transaction) {\n                    transaction.oncomplete = function (e) {\n                        cb();\n                    };\n                    transaction.onerror = function (e) {\n                        cb({status: 'fatal', msg: `Could not access object store (${e.message})`});\n                    };\n                    transaction.onabort = function (e) {\n                        cb({status: 'fatal', msg: `Transaction aborted (${e.message})`});\n                    };\n\n                    let objectStore = transaction.objectStore('customers');\n                    data.records.forEach((record) => {\n                        objectStore.put(record);\n                    });\n                }\n            } else {\n                this.clear(this.insert.bind(this, data, cb, false));\n            }\n        } else { // connect first and run test again\n            this.connect(this.insert.bind(this, data, cb));\n        }\n    }\n\n    singleByPK(data, cb) {\n        if (dbconn) {\n            let transaction = getTransaction('readonly', cb);\n\n            if (transaction) {\n                let objectStore = transaction.objectStore(OBJECTSTORENAME);\n                let objectStoreRequest = objectStore.get(data.single.pk.ssn);\n\n                objectStoreRequest.onsuccess = function (e) {\n                    if (objectStoreRequest.result) {\n                        cb();\n                    }\n                    else {\n                        cb({status: 'error', msg: 'Could not find record'});\n                    }\n                };\n                objectStoreRequest.onerror = function (e) {\n                    cb({status: 'error', msg: `Error during record lookup by PK ${e.message}`});\n                }\n            }\n        } else { // connect first and run test again\n            this.connect(this.singleByPK.bind(this, data, cb));\n        }\n    }\n\n    singleByUI(data, cb) {\n        let transaction = getTransaction('readonly', cb);\n\n        if (transaction) {\n            let objectStore = transaction.objectStore(OBJECTSTORENAME);\n\n            let index = objectStore.index('email');\n            index.get(data.single.ui.email).onsuccess = function (event) {\n                let record = event.target.result;\n                if (record.ssn === data.single.ui.ssn) {\n                    cb();\n                }\n                else {\n                    cb({state: 'error', msg: 'Wrong record found'})\n                }\n            };\n        }\n    }\n\n    multiByPK(data, cb) {\n        let transaction = getTransaction('readonly', cb);\n\n        if (transaction) {\n            let objectStore = transaction.objectStore(OBJECTSTORENAME);\n\n            let boundKeyRange = getIndexedDBObject('IDBKeyRange').bound(data.multi.pk[0].ssn, data.multi.pk[1].ssn, false, false);\n\n            let count = 0;\n            objectStore.openCursor(boundKeyRange).onsuccess = function (event) {\n                let cursor = event.target.result;\n                if (cursor) {\n                    count++;\n                    let email = cursor.value.email; // make sure the value is not lazy loaded\n                    if (email) {\n                        cursor.continue();\n                    } else {\n                        cb({status: 'error', msg: 'Found weird record without `email`'});\n                    }\n\n                }\n                else { // ready\n                    if (count === data.multi.numberOfMatches) {\n                        cb();\n                    } else {\n                        cb({status: 'error', msg: `Found ${count} matching records`});\n                    }\n                }\n            };\n        }\n    }\n\n    multiByUI(data, cb) {\n        this.multiByI(data, cb, 'ui', 'email');\n    }\n\n    multiByI(data, cb, indexName = 'i', columnName = 'name') {\n        let transaction = getTransaction('readonly', cb);\n\n        if (transaction) {\n\n            var objectStore = transaction.objectStore(OBJECTSTORENAME);\n\n            var index = objectStore.index(columnName);\n            var boundKeyRange = getIndexedDBObject('IDBKeyRange').bound(\n                data.multi[indexName][0][columnName],\n                data.multi[indexName][1][columnName], false, false);\n\n            var count = 0;\n            index.openCursor(boundKeyRange).onsuccess = function (event) {\n                var cursor = event.target.result;\n                if (cursor) {\n                    let ssn = cursor.value.ssn;\n                    count++;\n                    if (ssn) {\n                        cursor.continue();\n                    } else {\n                        cb({status: 'error', msg: 'Found weird record without `ssn`'});\n                    }\n                }\n                else { // ready\n                    if (count === data.multi.numberOfMatches) {\n                        cb();\n                    } else {\n                        cb({status: 'error', msg: `Found ${count} matching records`});\n                    }\n                }\n            };\n        }\n    }\n}\n\n\nfunction getIndexedDBObject(name) {\n    var upper = name[0].toUpperCase() + name.slice(1);\n\n    return window[name] || window['webkit' + upper] || window['moz' + upper] || window['ms' + upper];\n}\n\nfunction getTransaction(mode, cb) {\n    try {\n        return dbconn.result.transaction([OBJECTSTORENAME], mode);\n    } catch (e) {\n        cb({status: 'fatal', msg: `Could not create a transaction: ${transaction}`});\n        return null;\n    }\n}\n","\"use strict\";\n\nimport Testable from './Testable';\n\nexport default class LS extends Testable {\n    constructor() {}\n\n    static isAvailable() {\n        return typeof(Storage) !== void(0);\n    }\n\n    static get instance() {\n        return new LS();\n    }\n\n    setup(data, cb) {\n        localStorage.clear();\n        cb();\n    }\n\n    insert(data, cb) {\n       try {\n           data.records.forEach((record) => {\n               localStorage.setItem(record.ssn, JSON.stringify(record)) ;\n           });\n           cb();\n       } catch (e) {\n            cb({status: 'error', msg: e.message});\n       }\n    }\n\n    singleByPK(data, cb) {\n        let record = localStorage.getItem(data.single.pk.ssn) ;\n        if (record) {\n            record = JSON.parse(record);\n            if (record.email === data.single.pk.email) {\n                cb();\n            } else {\n                cb();\n            }\n        } else {\n            cb({status: 'error', msg: 'No record found'});\n\n        }\n    }\n}\n","import ViewModel from './ViewModel';\n\nclass Log {\n\n    constructor(setup={removable: true, prefix: null, subPrefix: null}) {\n        \"use strict\";\n        this.setup = {\n            removable: typeof setup.removable === 'undefined' ? true : setup.removable,\n            prefix: setup.prefix,\n            subPrefix: setup.subPrefix\n        };\n    }\n\n    set prefix(prefix) {\n        \"use strict\";\n\n        this.setup.prefix = prefix;\n    }\n\n    set subPrefix(subPrefix) {\n        \"use strict\";\n\n        this.setup.subPrefix = subPrefix;\n    }\n\n    /*\n     This function should be called if the timer is enabled when `busy` is called.\n     However, if `amend` is called with a `duration` the timer is also canceled.\n     */\n    done() {\n        \"use strict\";\n\n        if (this.interId) {\n            clearInterval(this.interId);\n        }\n\n        this.interId = null;\n        this.isBusy = false;\n    }\n\n    /*\n     Modify the last log message of this instance\n     */\n    amend(msg, ltype, duration) {\n        \"use strict\";\n\n        if (this.isBusy) {\n            if (msg) {\n                this.lastMsg.message(msg);\n            }\n\n            if (typeof duration === 'number') {\n                this.done();\n                this.lastMsg.duration(`${duration}s`);\n                this.pending = null;\n            }\n\n            if (ltype) {\n                this.lastMsg.ltype(ltype);\n            }\n        }\n\n        return this;\n    }\n\n    /*\n     This function is different from the other. It doesn't accept a duration, but instead you can activate an timer\n     NB: If you enable the time make sure to stop it when done by calling `done` or `amend` with a duration!\n     */\n    busy(msg, timer) {\n        \"use strict\";\n        if (this.interId) {\n            throw 'This log instance is still busy!!';\n        }\n\n        this.create('busy', msg, timer ? 0 : null);\n        this.isBusy = true;\n        if (timer) {\n            this.startTime = new Date();\n            this.interId = setInterval(() => {\n                let endTime = new Date();\n                this.lastMsg.duration(Math.floor((endTime - this.startTime) / 1000) + 's');\n            }, 1000);\n        }\n    }\n\n    getPrefix() {\n        \"use strict\";\n        let str = '';\n\n        if (this.setup.subPrefix) {\n            str = `(${this.setup.subPrefix})`\n        }\n        return this.setup.prefix ? `<strong>${this.setup.prefix}${str}</strong>: ` : '';\n    }\n\n    create(ltype, msg, duration) {\n        \"use strict\";\n\n        if (this.isBusy) {\n            this.amend(this.getPrefix() + msg, ltype, duration).done();\n        } else {\n            this.lastMsg = Log.create.call(this, ltype, msg, duration);\n        }\n    }\n\n    debug(msg, duration) {\n        this.create('debug', msg, duration);\n    }\n\n    warn(msg, duration) {\n        \"use strict\";\n        this.create('warn', msg, duration);\n    }\n\n    error(msg, duration) {\n        this.create('error', msg, duration);\n    }\n\n    info(msg, duration) {\n        this.create('info', msg, duration);\n    }\n\n    static create(ltype, msg, duration) {\n        var item = {\n            ltype: ko.observable(ltype || 'info'),\n            duration: ko.observable(typeof duration === 'number' ? `${duration}s` : (!ltype ? '' : '-')),\n            message: ko.observable(this.getPrefix() + msg),\n            removable: this.setup.removable\n        };\n        ViewModel.instance.logHistory.unshift(item);\n\n        return item;\n    }\n\n    // Removes all log history except for those items where: removeable === false\n    static clear() {\n        \"use strict\";\n\n        let history = ViewModel.instance.logHistory();\n\n        for(let i = history.length -1; i >= 0; i--) {\n            if (history[i].removable) {\n                history.splice(i, 1);\n            }\n        }\n    }\n}\n\nexport default Log\n","\"use strict\";\n\nimport ViewModel from './ViewModel';\n\nlet vm = ViewModel.instance;\n\nexport default class State {\n    constructor(engine) {\n        this.testIndex = 0;\n        this.engineSettings = engine;\n        this.engine = new engine.classRef();\n    }\n\n    getTest() {\n        return vm.tests[this.testIndex];\n    }\n\n    getEngine() {\n        return this.engine;\n    }\n\n    hasNextTest() {\n        return vm.tests.length > (this.testIndex + 1);\n    }\n    getTestName() {\n        return vm.tests[this.testIndex].name;\n    }\n\n    getDescriptiveName() {\n        return (vm.tests[this.testIndex].single ? '' : 'Multiple ') + vm.tests[this.testIndex].name;\n    }\n\n    nextTest() {\n        return vm.tests[++this.testIndex];\n    }\n\n    isTestAvailable() {\n        return vm.tests[this.testIndex].enabled;\n    }\n\n    startTest() {\n        this.engineSettings.tests[this.testIndex].state('busy');\n    }\n\n    endTest(status, duration='') {\n        this.engineSettings.tests[this.testIndex].state(status);\n        this.engineSettings.tests[this.testIndex].duration(duration);\n    }\n}\n","import ViewModel from './ViewModel';\nimport Generator from './Generator';\nimport Benchmark from './Benchmark';\nimport State from './State';\nimport Log from './Log';\nimport IDB from './IDB';\nimport WebSql from './WebSql';\nimport LS from './LS';\n\nlet singleton = Symbol();\nlet singletonEnforcer = Symbol();\nlet testData = null;\n\nlet messages = {\n    setup: {\n        info: 'NB'\n    },\n    insert: {\n        busy: 'Inserting records',\n        error: 'Insert'\n    },\n    singleByPK: {\n        error: 'Primary Key record not found'\n    },\n    singleByUI: {\n        error: 'Unique Index record not found'\n    },\n    multiByPK: {\n        error: 'Primary Key records not found'\n    },\n    multiByUI: {\n        error: 'Unique Index records not found'\n    },\n    multiByI: {\n        error: 'Records not found by Index'\n    },\n    multiByNoI: {\n        error: 'Records not found using no Index'\n    }\n};\n\n\nclass TestRunner {\n\n    constructor(enforcer) {\n        if (enforcer != singletonEnforcer) throw \"Cannot construct singleton\";\n\n        this.tests = ViewModel.instance.tests;\n    }\n\n    static get instance() {\n        if (!this[singleton]) {\n            this[singleton] = new TestRunner(singletonEnforcer);\n        }\n        return this[singleton];\n    }\n\n    getData(cb) {\n        let settings = ViewModel.instance.config;\n\n        if (this.seed !== parseInt(settings.seed()) || this.records !== parseInt(settings.records())) {\n            this.seed = parseInt(settings.seed());\n            this.records = parseInt(settings.records());\n\n            let log = new Log(),\n                bm = new Benchmark();\n\n            log.busy(`Creating ${this.records} records`, true);\n            bm.start();\n\n            // Start WebWorker\n            let w = new Worker(\"build/data-worker.js\");\n            w.onmessage = (event) => {\n                \"use strict\";\n                testData = event.data;\n\n                let size = (sizeof(testData.records.slice(0, 100)) * testData.records.length / 100) / 1024 / 1024,\n                    units = 'MB';\n\n                if (size < 1) {\n                    size *= 1024;\n                    units = 'KB';\n                }\n                log.amend(`Created ${this.records} records (${Math.round(size * 100) / 100 + units})`, 'info', bm.end());\n                cb(testData);\n            };\n            w.postMessage([settings.records(), settings.seed(), settings.multiple()]);\n        } else {\n            cb(testData);\n        }\n    }\n\n    run(cb) {\n        let vm = ViewModel.instance;\n        let tests = vm.tests;\n\n        this.getData((data) => {\n            \"use strict\";\n\n            let filtered = vm.engines().filter((engine) => {\n                return engine.checked() && !engine.disabled();\n            });\n\n            if (filtered && filtered.length > 0) {\n                let log = new Log(),\n                    bm = new Benchmark().start();\n\n                this.testEngines(data, filtered, () => {\n                    log.info('Done', bm.end());\n                    cb();\n                });\n            } else {\n                new Log().warn('Not storage engines enabled for testing');\n                cb();\n            }\n        });\n    }\n\n    testEngines(data, engines, cb, i = 0) {\n        \"use strict\";\n\n        let engine = engines[i];\n\n        if (engine) {\n            let log = new Log({prefix: engine.name}),\n                state = new State(engine),\n                bm = new Benchmark().start();\n\n            this.performTest([state.getTest().id], state, log, data, (output) => {\n                log.subPrefix = null;\n\n                if (output) {\n                    log.info('Tests successful', bm.end());\n                }\n                else {\n                    log.error('Test failed', bm.end());\n                }\n                this.testEngines(data, engines, cb, ++i);\n            });\n        }\n        else {\n            cb();\n        }\n    }\n\n    performTest(test, state, log, data, cb) {\n        \"use strict\";\n\n        state.startTest();\n        log.subPrefix = state.getDescriptiveName();\n\n        if (state.isTestAvailable()) {\n            let benchmark = new Benchmark().start();\n            if (messages[test].busy) {\n                log.busy(messages[test].busy, true);\n            }\n\n            setTimeout(() => {\n                state.getEngine()[test](data, (output) => {\n                    let duration = benchmark.end();\n                    let containsFatal = false;\n                    let containsError = false;\n                    let containsSkipped = false;\n\n                    if (output && output.length > 0) {\n                        output.forEach((item) => {\n                            if (item.fatal) {\n                                containsFatal = true;\n                                log.error(`${messages[test].error} - ${item.fatal}`, duration);\n                            }\n                            if (item.error) {\n                                containsError = true;\n\n                                log.error(`${messages[test].error} - ${item.error}`, duration);\n                            }\n                            if (item.info) {\n                                log.info(`${messages[test].info} - ${item.info}`, duration);\n                            }\n                            if (item.skipped) {\n                                containsSkipped = true;\n                            }\n                        });\n\n                        if (containsFatal) {\n                            return cb(false);\n                        }\n                    }\n\n                    if (containsError || containsFatal) {\n                        state.endTest('failed', duration);\n                    } else if (containsSkipped) {\n                        state.endTest('skipped');\n                    } else {\n                        state.endTest('passed', duration);\n                        log.info('Done', duration);\n                    }\n\n                    setTimeout(() => { // Escape from try-catch used in LS\n                        if (state.hasNextTest()) {\n                            this.performTest(state.nextTest().id, state, log, data, cb);\n                        } else {\n                            cb(true);\n                        }\n                    });\n                })\n            }, 1);\n        } else {\n            state.endTest('skip');\n            setTimeout(() => { // Escape from try-catch used in LS\n                if (state.hasNextTest()) {\n                    this.performTest(state.nextTest().id, state, log, data, cb);\n                } else {\n                    cb(true);\n                }\n            });\n        }\n    }\n}\n\nexport default TestRunner;\n","let output = [{skipped: true}];\nexport default class Testable {\n    constructor() {\n    }\n\n    setup () {\n        throw this.__proto__.constructor.name + \": Setup is not implemented\";\n    }\n\n    static isAvailable() {\n        \"use strict\";\n        return false;\n    }\n\n    setup() {\n        \"use strict\";\n        arguments[arguments.length - 1](output);\n    }\n\n    insert() {\n        \"use strict\";\n        arguments[arguments.length - 1](output);\n    }\n\n    singleByPK() {\n        \"use strict\";\n        arguments[arguments.length - 1](output);\n    }\n\n    singleByUI() {\n        \"use strict\";\n        arguments[arguments.length - 1](output);\n    }\n\n    multiByPK() {\n        \"use strict\";\n\n        arguments[arguments.length - 1](output);\n    }\n\n    multiByUI() {\n        \"use strict\";\n\n        arguments[arguments.length - 1](output);\n    }\n\n    multiByI() {\n        \"use strict\";\n\n        arguments[arguments.length - 1](output);\n    }\n\n    multiByNoI() {\n        \"use strict\";\n\n        arguments[arguments.length - 1](output);\n    }\n}\n","import IDB from './IDB';\nimport WebSql from './WebSql';\nimport LS from './LS';\n\nlet singleton = Symbol();\nlet singletonEnforcer = Symbol()\n\nclass ViewModel {\n    constructor(enforcer) {\n        if (enforcer != singletonEnforcer) throw \"Cannot construct singleton\";\n\n        this.tests = [\n            {\n                id: 'setup',\n                name: 'Setup',\n                enabled: true,\n                single: true\n            },\n            {\n                id: 'insert',\n                name: 'Insert',\n                enabled: true,\n                single: true\n            },\n            {\n                id: 'singleByPK',\n                name: 'PK',\n                enabled: true,\n                single: true\n            },\n            {\n                id: 'singleByUI',\n                name: 'UI',\n                enabled: true,\n                single: true\n            },\n            {\n                id: 'multiByPK',\n                name: 'PK',\n                single: false,\n                enabled: true\n            },\n            {\n                id: 'multiByUI',\n                name: 'UI',\n                single: false,\n                enabled: true\n            },\n            {\n                id: 'multiByI',\n                name: 'I',\n                single: false,\n                enabled: true\n            },\n            {\n                id: 'multiByNoI',\n                name: 'No Index',\n                single: false,\n                enabled: true\n            }\n        ];\n\n        this.engines = ko.observableArray([\n            {\n                name: 'LocalStorage',\n                checked: ko.observable(true),\n                disabled: ko.observable(true), // TRUE if storage engine is not supported by the browser\n                id: 'ls',\n                tests: [],//ko.observableArray([])\n                classRef: LS\n            },\n            {\n                name: 'IndexedDB',\n                checked: ko.observable(true),\n                disabled: ko.observable(true),\n                id: 'indexeddb',\n                tests: [],//ko.observableArray([])\n                classRef: IDB\n            },\n            {\n                name: 'WebSQL',\n                checked: ko.observable(true),\n                disabled: ko.observable(true),\n                id: 'websql',\n                tests: [],//ko.observableArray([])\n                classRef: WebSql\n            }\n        ]);\n\n        this.engines().forEach((engine) => {\n            for(let i = 0; i < this.tests.length; i++) {\n                engine.tests.push({\n                    state: ko.observable(),\n                    duration: ko.observable()\n                });\n            }\n        });\n\n        this.results = {}; // TODO ????\n        this.logHistory = ko.observableArray();\n        this.config = {\n            records: ko.observable(1000),\n            seed: ko.observable(2345678901),\n            multiple: ko.observable(10)\n        };\n    }\n\n    clearTestData() {\n        \"use strict\";\n\n        this.engines().forEach((engine) => {\n            for(let i = 0; i < this.tests.length; i++) {\n                engine.tests[i].state(null);\n                engine.tests[i].duration(null);\n            }\n        });\n    }\n\n    static get instance() {\n        if (!this[singleton]) {\n            this[singleton] = new ViewModel(singletonEnforcer);\n        }\n        return this[singleton];\n    }\n}\n\nexport default ViewModel\n","\"use strict\";\n\nimport Testable from './Testable';\n\nvar DBNAME = 'wsql-test', TABLENAME = 'customers', VERSION = 1;\nlet dbconn;\n\nexport default class WebSql extends Testable {\n    constructor(options = {dbname: 'idb-test', store: 'customers'}) {\n        this.dbname = options.dbname;\n        this.store = options.store;\n    }\n\n    static isAvailable() {\n        return !!window.openDatabase;\n    }\n\n    static getCreateTableSql(db = 'sqlite') {\n        let text = db === 'sqlite' ? 'TEXT' : 'VARCHAR(30)';\n\n        // TODO: Check index usage if tests are implemented\n        let output = [`DROP TABLE IF EXISTS ${TABLENAME};`,\n            `DROP INDEX IF EXISTS email_idx;`,\n            `CREATE TABLE IF NOT EXISTS ${TABLENAME} (ssn ${text} PRIMARY KEY, email TEXT NOT NULL, name ${text}, age REAL);`]; //, UNIQUE(email));`];\n        output.push(`CREATE UNIQUE INDEX email_idx ON ${TABLENAME} (email);\\n`);\n        return output;\n    }\n\n    connect() {\n        dbconn = openDatabase(DBNAME, VERSION, 'performance test database', 10 * 1024 * 1024); // 10MB in size\n    }\n\n    setup(data, cb) {\n        if (!dbconn) {\n            this.connect();\n        }\n\n        // create database\n        dbconn.transaction((tx) => {\n            WebSql.getCreateTableSql().forEach((statement) => {\n                tx.executeSql(statement);\n            });\n        }, (err) => {\n            cb([{fatal: `'Could not create table: ${err.message})`}]);\n        }, cb);\n    }\n\n    insert(data, cb) {\n        if (!dbconn) {\n            this.connect();\n        }\n\n        dbconn.transaction((tx) => {\n            tx.executeSql(`DELETE FROM ${TABLENAME}`);\n\n            data.records.forEach((record) => {\n                tx.executeSql(`INSERT INTO ${TABLENAME} (ssn, email, name, age) VALUES(?,?,?,?)`,\n                    [record['ssn'],\n                        record['email'],\n                        record['name'],\n                        record['age']\n                    ]\n                );\n            });\n        }, (err) => {\n            cb([{fatal: `'Could not insert records: ${err.message})`}]);\n        }, cb);\n    }\n\n    singleByPK(data, cb) {\n        this.singleByUI(data, cb, 'pk', 'ssn', 'email');\n    }\n\n    singleByUI(data, cb, stype = \"ui\", searchKey = 'email', validationKey = 'ssn') {\n        if (!dbconn) {\n            this.connect();\n        }\n\n        dbconn.transaction(function (tx) {\n            var sql = `SELECT * FROM ${TABLENAME} WHERE ${searchKey}=\"${data.single[stype][searchKey]}\"`;\n\n            tx.executeSql(sql, [], (tx, results) => {\n                if (results.rows.length === 1 &&\n                    results.rows.item(0)[validationKey] === data.single[stype][validationKey]) {\n                    cb();\n                } else {\n                    cb([{error: results.rows.length === 0 ? 'No record found' : 'Multiple records found'}]);\n                }\n            }, (t, err) => {\n                cb([{fatal: `Could not run query: ${err.message}`}]);\n            });\n        });\n    }\n\n    multiByPK(data, cb) {\n        this.multiByUI(data, cb, 'pk', 'ssn');\n    }\n\n    multiByUI(data, cb, stype = 'ui', searchKey = 'email') {\n        if (!dbconn) {\n            this.connect();\n        }\n\n        dbconn.transaction(function (tx) {\n            var sql = `SELECT * FROM ${TABLENAME} WHERE ${searchKey} >= \"${data.multi[stype][0][searchKey]}\" AND ${searchKey} <= \"${data.multi[stype][1][searchKey]}\"`;\n\n            tx.executeSql(sql, [], (tx, results) => {\n                if (results.rows.length === data.multi.numberOfMatches) {\n                    cb();\n                } else {\n                    cb([{error: `Found ${results.rows.length} records instead of ${data.multi.numberOfMatches}`}]);\n                }\n            }, (t, err) => {\n                cb([{fatal: `Could not run query: ${err.message}`}]);\n            });\n        });\n    }\n\n    multiByI(data, cb) {\n        this.multiByUI(data, cb, 'i', 'name');\n    }\n\n    multiByNoI(data, cb) {\n        this.multiByUI(data, cb, 'noi', 'age');\n    }\n}\n"]}